"use client";
import "./globals.css";
import { usePathname } from "next/navigation";
import { ReduxProvider } from "@/redux/provider";
import dynamic from "next/dynamic";
import Skeleton from "@/ui/block/Sekeleton/Skeleton";
const Bg = dynamic(() => import("@/ui/layout/Bg/Bg"), {
  loading: () => <Skeleton className="w-full h-full" />,
  ssr: false,
});

const metadata = {
  title: "Focus Flow",
  description: "Generated by create next app",
};

export default function RootLayout({ children }) {
  const pathname = usePathname();
  const showBg = pathname.includes("login") || pathname.includes("register");

  return (
    <html lang="en" suppressHydrationWarning={false}>
      <head>
        <link
          rel="apple-touch-icon"
          sizes="180x180"
          href="/apple-touch-icon.png"
        />
        <link rel="icon" sizes="180x180" href="/apple-touch-icon.png" />
        <link
          rel="icon"
          type="image/png"
          sizes="32x32"
          href="/favicon-32x32.png"
        />
        <link
          rel="icon"
          type="image/png"
          sizes="16x16"
          href="/favicon-16x16.png"
        />
        <link rel="manifest" href="/site.webmanifest" />
        <script
          dangerouslySetInnerHTML={{
            __html: `
            (function() {
              const theme = localStorage.getItem('theme');
              const isDarkMode = theme === 'dark' || (!theme && window.matchMedia('(prefers-color-scheme: dark)').matches);
              if (isDarkMode) {
                document.documentElement.classList.add('dark');
              } else {
                document.documentElement.classList.remove('dark');
              }
            })();
          `,
          }}
        />
      </head>
      <ReduxProvider>
        <body>
          {showBg && <Bg />}
          {children}
        </body>
      </ReduxProvider>
    </html>
  );
}
